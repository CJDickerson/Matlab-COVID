%% Import data from spreadsheet
% Script for importing data from the following spreadsheet:
%
%    Workbook: C:\Users\cjdic\OneDrive\Documents\COVID\20211116\Covid_Vaccine_Coverage_by_County_718469_7.xlsx
%    Worksheet: COVID Vaccine Coverage
%
% Auto-generated by MATLAB on 21-Nov-2021 17:26:43

%% Set up the Import Options and import the data
opts = spreadsheetImportOptions("NumVariables", 10);

% Specify sheet and range
opts.Sheet = "COVID Vaccine Coverage";
% opts.DataRange = "A2:J153451";
opts.DataRange = "A2";

% Specify column names and types
opts.VariableNames = ["PersonsResidenceInPreparednessRegion", "PersonsResidenceInLocalHealthDepartment", "PersonsResidenceInCounty", "Sex", "AgeGroup", "AdministrationLevel", "CensusMIPopulation12YearsAndOlder", "WeekEndingDate", "NumberOfDoses", "Coverage"];
opts.VariableTypes = ["categorical", "categorical", "categorical", "categorical", "categorical", "categorical", "string", "datetime", "double", "string"];

% Specify variable properties
opts = setvaropts(opts, ["CensusMIPopulation12YearsAndOlder", "Coverage"], "WhitespaceRule", "preserve");
opts = setvaropts(opts, ["PersonsResidenceInPreparednessRegion", "PersonsResidenceInLocalHealthDepartment", "PersonsResidenceInCounty", "Sex", "AgeGroup", "AdministrationLevel", "CensusMIPopulation12YearsAndOlder", "WeekEndingDate", "Coverage"], "EmptyFieldRule", "auto");

% Import the data
[fname, path] = uigetfile('*.xlsx','Select Vaccines Coverage File');
tic
oldPath = cd(path);
tbl = readtable(fname, opts, "UseExcel", false);
% CovidVaccineCoveragebyCounty7184697S1 = readtable("C:\Users\cjdic\OneDrive\Documents\COVID\20211116\Covid_Vaccine_Coverage_by_County_718469_7.xlsx", opts, "UseExcel", false);

% reorder because '5-11 years' comes after '40-49 years' alphabetically
tbl.AgeGroup = reordercats(tbl.AgeGroup,{'under 5 years','5-11 years','12-15 years','16-19 years','20-29 years','30-39 years','40-49 years','50-64 years','65-74 years','75+ years','missing'});
tbl.AdministrationLevel = reordercats(tbl.AdministrationLevel,{'Initiation','Completion','Up-To-Date'});

%% Clear temporary variables
clear opts

Completion = 1;
Initiation = 2;
UpToDate = 3;

% get unique weeks
uweek = unique(tbl.WeekEndingDate);
tmp = ~isnat(uweek);
weeks = uweek(tmp);
numweeks = size(weeks,1);
% get age groups
ages = unique(tbl.AgeGroup);
numAges = size(ages,1);
% get AdministrationLevel
doses.type = unique(tbl.AdministrationLevel);
doses.num = size(doses.type,1);
% get sexes
sexes = unique(tbl.Sex);
numSexes = size(sexes,1);
% get counties
counties = unique(tbl.PersonsResidenceInCounty);
numCounties = size(counties,1);
selected_counties(1) = counties(counties == "Ottawa");
selected_counties(2) = counties(counties == "Newaygo");
numSelectedCounties = size(selected_counties,2);

% Need to get population. Can't use a sum because it's stored as a string
for a = 1:numAges
    for s = 1:numSexes
        Slice = tbl(tbl.AgeGroup == ages(a) & tbl.WeekEndingDate == weeks(end) & tbl.AdministrationLevel == doses.type(Completion) & tbl.Sex == sexes(s),:);        
        pop.age_sex(a,s) = 0;
        for i = 1:size(Slice,1)
            if ~strcmp(Slice.CensusMIPopulation12YearsAndOlder(i),"")
                pop.age_sex(a,s) = pop.age_sex(a,s) + str2double(Slice.CensusMIPopulation12YearsAndOlder(i));
            end
        end
        CountySlice = Slice(Slice.PersonsResidenceInCounty == selected_counties(1),:);
        pop.age_sex_county(a,s,1) = 0;
        for i = 1:size(CountySlice,1)
            if ~strcmp(CountySlice.CensusMIPopulation12YearsAndOlder(i),"")
                pop.age_sex_county(a,s,1) = pop.age_sex_county(a,s,1) + str2double(CountySlice.CensusMIPopulation12YearsAndOlder(i));
            end
        end
        CountySlice = Slice(Slice.PersonsResidenceInCounty == selected_counties(2),:);
        pop.age_sex_county(a,s,2) = 0;
        for i = 1:size(CountySlice,1)
            if ~strcmp(CountySlice.CensusMIPopulation12YearsAndOlder(i),"")
                pop.age_sex_county(a,s,2) = pop.age_sex_county(a,s,2) + str2double(CountySlice.CensusMIPopulation12YearsAndOlder(i));
            end
        end
    end
    pop.age(a) = sum(pop.age_sex(a,:));
    pop.age_county(a,1) = sum(pop.age_sex_county(a,:,1));
    pop.age_county(a,2) = sum(pop.age_sex_county(a,:,2));
end
pop.total = sum(pop.age);
pop.county_total = sum(pop.age_county);
clear Slice CountySlice tmp uweek s
%%
% Get all doses for each age group over each week
doses.week_accum = zeros(numweeks,doses.num);
doses.week_county_accum = zeros(numweeks,doses.num,2);
doses.week_age_accum = zeros(numweeks,numAges,doses.num);
for i = 1:numweeks
    for a = 1:numAges
        for d = 1:doses.num
            Slice = tbl(tbl.WeekEndingDate == weeks(i) & tbl.AgeGroup == ages(a) & tbl.AdministrationLevel == doses.type(d),:);
            doses.week_age(i,a,d) = sum(Slice.NumberOfDoses);
            if i > 1
                doses.week_age_accum(i,a,d) = doses.week_age_accum(i-1,a,d) + doses.week_age(i,a,d);
            end
            CountySlice = Slice(Slice.PersonsResidenceInCounty == selected_counties(1),:);
            doses.week_age_county(i,a,d,1) = sum(CountySlice.NumberOfDoses);
            CountySlice = Slice(Slice.PersonsResidenceInCounty == selected_counties(2),:);
            doses.week_age_county(i,a,d,2) = sum(CountySlice.NumberOfDoses);
        end
    end
    % get total doses for all ages
    for d = 1:doses.num
        doses.week(i,d) = sum(doses.week_age(i,:,d));
    end
    if i > 1
        for d = 1:doses.num
            doses.week_accum(i,d) = doses.week_accum(i-1,d) + doses.week(i,d);
        end
    end
    for c = 1:numSelectedCounties
        for d = 1:doses.num
            doses.week_county(i,d,c) = squeeze(sum(doses.week_age_county(i,:,d,c)));
        end
    end
    if i > 1
        for c = 1:numSelectedCounties
            for d = 1:doses.num
                doses.week_county_accum(i,d,c) = doses.week_county_accum(i-1,d,c) + doses.week_county(i,d,c);
            end
        end
    end
end
% get percent of population for accumulated doses
doses.week_accum_pct = 100*doses.week_accum/pop.total;
for c = 1:numSelectedCounties
    for d = 1:doses.num
        doses.week_county_accum_pct(1:numweeks,d,c) = 100*doses.week_county_accum(:,d,c)/pop.county_total(c);
    end
end
for a = 1:numAges
    doses.week_age_accum_pct(1:numweeks,a,1:doses.num) = 100*doses.week_age_accum(:,a,:)/pop.age(a);
end

% Get all dose types for each age group, calculate % of population
doses.age = squeeze(sum(doses.week_age));
doses.age_county = squeeze(sum(doses.week_age_county));
for a = 1:numAges
    for d = 1:doses.num
        doses.age_pct(a,d) = 100*doses.age(a,d)/pop.age(a);
        for c = 1:numSelectedCounties
            doses.age_pct_county(a,d,c) = 100*doses.age_county(a,d,c)/pop.age_county(a,c);
        end
    end
end
% Get total state 1st and 2nd doses, calculate % of population
doses.total = sum(doses.age);
doses.total_pct = 100*doses.total/pop.total;
doses.total_county = squeeze(sum(doses.age_county));
for c = 1:numSelectedCounties
    doses.total_pct_county(:,c) = 100*doses.total_county(:,c)/pop.county_total(c);
end

clear CountySlice Slice
%%

% figure;
% bar(weeks,doses.week/1000,1.0);
% grid on;
% legend(doses.type);
% title('Michigan doses vs Week');
% xlabel('Date');
% ylabel('Doses in Thousands');
% f = gcf;
% file_str = sprintf('Michigan_Weekly_Doses_%s.png',weeks(end));
% exportgraphics(f,file_str);

figure;
bar(weeks,doses.week/1000,'stacked');
grid on;
legend(doses.type,'Location','Best');
% ylim([0 100]);
title('Michigan Doses vs Week');
xlabel('Date');
ylabel('Thousands of Doses');
f = gcf;
file_str = sprintf('Michigan_Weekly_Doses_%s.png',weeks(end));
exportgraphics(f,file_str);

figure;
plot(weeks,doses.week_accum_pct(:,1),'b- .');
hold on;
plot(weeks,doses.week_accum_pct(:,2),'m- .');
plot(weeks,doses.week_accum_pct(:,3),'g- .');
grid on;
legend(doses.type,'Location','Best');
ylim([0 100]);
title('Michigan Accumulated Doses vs Week');
xlabel('Date');
ylabel('Doses (pct of population)');
f = gcf;
file_str = sprintf('Michigan_Accum_Weekly_Doses_%s.png',weeks(end));
exportgraphics(f,file_str);

for c = 1:numSelectedCounties
%     figure;
%     bar(weeks,squeeze(doses.week_county(:,:,c)),1.0);
%     grid on;
%     legend(doses.type);
%     title_str = sprintf('%s County Doses vs Week',selected_counties(c));
%     title(title_str);
%     xlabel('Date');
%     ylabel('Doses');
%     f = gcf;
%     file_str = sprintf('%s_County_Weekly_Doses_%s.png',selected_counties(c),weeks(end));
%     exportgraphics(f,file_str);

    figure;
    bar(weeks,doses.week_county(:,:,c),'stacked');
    grid on;
    legend(doses.type,'Location','Best');
    title_str = sprintf('%s County Doses vs Week',selected_counties(c));
    title(title_str);
    xlabel('Date');
    ylabel('Doses');
    f = gcf;
    file_str = sprintf('%s_County_Weekly_Doses_%s.png',selected_counties(c),weeks(end));
    exportgraphics(f,file_str);

    figure;
    plot(weeks,squeeze(doses.week_county_accum_pct(:,1,c)),'b- .');
    hold on;
    plot(weeks,squeeze(doses.week_county_accum_pct(:,2,c)),'m- .');
    plot(weeks,squeeze(doses.week_county_accum_pct(:,3,c)),'g- .');
    grid on;
    legend(doses.type,'Location','Best');
    title_str = sprintf('%s County Accumulated Doses vs Week',selected_counties(c));
    title(title_str);
    ylim([0 100]);
    xlabel('Date');
    ylabel('Doses (pct of population)');
    f = gcf;
    file_str = sprintf('%s_County_Weekly_Accum_Doses_%s.png',selected_counties(c),weeks(end));
    exportgraphics(f,file_str);
end

figure;
bar(ages,doses.age_pct,1.0);
grid on; 
legend(doses.type);
title('Michigan Percent Vaccinated vs Age Group');
xlabel('Age');
ylabel('Percent Of Population Vaccinated');
ylim([0 100]);
f = gcf;
file_str = sprintf('Michigan_Age_Pct_Vaccinated_%s.png',weeks(end));
exportgraphics(f,file_str);

for c = 1:numSelectedCounties
    figure;
    bar(ages,squeeze(doses.age_pct_county(:,:,c)),1.0);
    grid on;
    legend(doses.type);
    title_str = sprintf('%s County Percent Vaccinated vs Age Group',selected_counties(c));
    title(title_str);
    xlabel('Age');
    ylabel('Percent Of Population Vaccinated');
    ylim([0 100]);
    f = gcf;
    file_str = sprintf('%s_County_Age_Pct_Vaccinated_%s.png',selected_counties(c),weeks(end));
    exportgraphics(f,file_str);
end

figure
bar([doses.total_pct;doses.total_pct_county(:,1)';doses.total_pct_county(:,2)']);
hold on;
grid on;
legend(doses.type);
title('Michigan Percent Vaccinated');
ylabel('Percent Of Population Vaccinated');
xlabel('');
set(gca,'XTickLabel',{'Michigan', 'Ottawa County', 'Newaygo County'})
ylim([0 100]);
f = gcf;
file_str = sprintf('Pct_Vaccinated_%s.png',weeks(end));
exportgraphics(f,file_str);

lots_of_plots = 1;
if lots_of_plots
    for a = 1:numAges
%         figure('WindowState','fullscreen');
%         subplot(3,1,1);
%         bar(weeks,squeeze(doses.week_age(:,a,:))/1000,1.0);
%         grid on;
%         legend(doses.type);
%         title(['Michigan doses per week for ages: ',ages(a),' in Thousands']);
%         f = gcf;
%         file_str = sprintf('Michigan_Weekly_Doses_Age_%s_%s.png',ages(a),weeks(end));
%         exportgraphics(f,file_str);

%         figure;
%         subplot(3,1,2);
%         bar(weeks,squeeze(doses.week_age_county(:,a,:,1)),1.0);
%         grid on;
%         legend(doses.type);
%         title([selected_counties(1),' County doses per week for ages: ',ages(a),' ']);
%         f = gcf;
%         file_str = sprintf('%s_County_Weekly_Doses_Age_%s_%s.png',selected_counties(1),ages(a),weeks(end));
%         exportgraphics(f,file_str);

%         figure;
%         subplot(3,1,3);
%         bar(weeks,squeeze(doses.week_age_county(:,a,:,2)),1.0);
%         grid on;
%         legend(doses.type);
%         title([selected_counties(2),' County doses per week for ages: ',ages(a),' ']);
%         f = gcf;
%         file_str = sprintf('%s_County_Weekly_Doses_Age_%s_%s.png',selected_counties(2),ages(a),weeks(end));
%         exportgraphics(f,file_str);
%         f = gcf;
%         file_str = sprintf('Weekly_Doses_Age_%s_%s.png',ages(a),weeks(end));
%         exportgraphics(f,file_str);

        figure;
        plot(weeks,doses.week_age_accum_pct(:,a,1),'b- .');
        hold on;
        plot(weeks,doses.week_age_accum_pct(:,a,2),'m- .');
        plot(weeks,doses.week_age_accum_pct(:,a,3),'g- .');
        grid on;
        legend(doses.type,'Location','Best');
        ylim([0 100]);
        title(['Michigan accumulated doses per week for ages: ',ages(a)']);
        xlabel('Date');
        ylabel('Doses (pct of population)');
        f = gcf;
        file_str = sprintf('Weekly_accum_doses_Age_%s_%s.png',ages(a),weeks(end));
        exportgraphics(f,file_str);
    end
end

cd(oldPath);
toc;